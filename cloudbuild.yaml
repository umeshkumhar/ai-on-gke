steps:
- id: Execute Terraform to provision GKE 
  name: 'hashicorp/terraform:latest'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      # cd platform
      terraform -chdir="./platform/" init -no-color
      terraform -chdir="./platform/" apply -auto-approve -no-color
- id: Update authorised networks
  name: gcr.io/google.com/cloudsdktool/cloud-sdk
  args:
    - '-c'
    - |
        export SHELL_IP=$$(curl https://ipinfo.io/ip) && \
        echo $$SHELL_IP && \
        export CLUSTERNAME=$$(cat ./platform/platform.auto.tfvars | grep -w cluster_name | awk {'print $$NF'}| awk -F'["]' '{ print $$2 }')
        export REGION=$$(cat ./platform/platform.auto.tfvars | grep -w cluster_region | awk {'print $$NF'}| awk -F'["]' '{ print $$2 }')
        export PROJECT=$$(cat ./platform/platform.auto.tfvars | grep -w project | awk {'print $$NF'} | awk -F'["]' '{ print $$2 }')
        echo $$CLUSTERNAME $$REGION $$PROJECT
        # gcloud container clusters update ml-cluster --location us-central1 --enable-master-authorized-networks --master-authorized-networks $$SHELL_IP/32
        gcloud container clusters update $$CLUSTERNAME --region $$REGION --project $$PROJECT --enable-master-authorized-networks --master-authorized-networks $$SHELL_IP/32
        gcloud container clusters get-credentials $$CLUSTERNAME --region $$REGION --project $$PROJECT && \
        kubectl get pods -A
        # cat  ~/.kube/config > ./workspace/kubeconfig.yaml
  entrypoint: bash
- id: Deploy User workloads
  name: gcr.io/cloudshell-images/cloudshell:latest
  entrypoint: sh
  args:
    - '-c'
    - |
      export KUBE_CONFIG_PATH=~/.kube/config
      terraform -chdir="./workloads/" init  -no-color
      terraform -chdir="./workloads/" apply -auto-approve -no-color
      # terraform -chdir="./workloads/" apply -auto-approve -no-color --kubeconfig ./workloads/kubeconfig.yaml

# - id: Optional Customization 
#   name: gcr.io/google.com/cloudsdktool/cloud-sdk
#   args:
#     - '-c'
#     - |
#       export SHELL_IP=$$(curl https://ipinfo.io/ip) && \
#       echo $$SHELL_IP && \
#       gcloud container clusters get-credentials ml-cluster --region us-central1 --project ai-sandbox-4 && \
#       kubectl get pods -A && \
#       kubectl run nginx2352 --image=nginx 
#   entrypoint: bash
serviceAccount: 'projects/juanie-newsandbox/serviceAccounts/terraform-sa@juanie-newsandbox.iam.gserviceaccount.com'
options:
  logging: CLOUD_LOGGING_ONLY